<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="reengineering.ddd.teamai.mybatis.mappers.ConversationsMapper">
  <resultMap id="conversation" type="reengineering.ddd.teamai.model.Conversation">
    <id property="identity" column="id" jdbcType="VARCHAR" javaType="String"/>
    <association property="description" javaType="reengineering.ddd.teamai.description.ConversationDescription">
      <constructor>
        <arg column="title" jdbcType="VARCHAR" javaType="String"/>
      </constructor>
    </association>
  </resultMap>

  <select id="findConversationByUserAndId" resultMap="conversation">
    SELECT conversation.id,
           conversation.title
    FROM conversations conversation
    WHERE conversation.user_id = #{user_id}
      AND conversation.id = #{id}
  </select>

  <insert id="insertConversation" useGeneratedKeys="true" keyProperty="holder.id" keyColumn="id"
          parameterType="reengineering.ddd.mybatis.support.IdHolder">
    INSERT INTO conversations(title, user_id)
    VALUES (#{description.title}, #{user_id})
  </insert>

  <select id="countConversationByUser" resultType="int">
    select count(id)
    from conversations
    where user_id = #{user_id}
  </select>

  <select id="findConversationsByUserId" resultMap="conversation">
    select conversation.id,
           conversation.title
    from conversations conversation
    where user_id = #{user_id}
    limit #{size} offset #{from}
  </select>
</mapper>
