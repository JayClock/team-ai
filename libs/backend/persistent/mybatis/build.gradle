plugins {
    id 'java'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'maven-publish'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
  mavenLocal()
  mavenCentral()
  maven { url 'https://repo.spring.io/milestone' }
  maven { url 'https://repo.spring.io/snapshot' }
  maven {
    name = 'Central Portal Snapshots'
    url = 'https://central.sonatype.com/repository/maven-snapshots/'
  }
}

dependencyManagement {
    imports {
        mavenBom 'org.springframework.boot:spring-boot-dependencies:3.4.8'
    }
}

dependencies {
    implementation project(':domain')
    implementation platform("org.springframework.ai:spring-ai-bom:1.0.1")
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'jakarta.inject:jakarta.inject-api:2.0.1'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.4'
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-database-postgresql'
    implementation 'org.postgresql:postgresql'
    implementation 'org.springframework.ai:spring-ai-starter-model-deepseek'
    implementation 'org.springframework.ai:spring-ai-spring-boot-testcontainers'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.4'
    testImplementation 'org.testcontainers:postgresql:1.19.3'
    testImplementation 'org.testcontainers:junit-jupiter:1.19.3'
    testImplementation 'io.projectreactor:reactor-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

publishing {
    publications {
        mybatisMaven(MavenPublication) {
            from components.java

            // Suppress the validation for dependencies without versions
            suppressPomMetadataWarningsFor('runtimeElements')
        }
    }
}

tasks.withType(GenerateModuleMetadata) {
    suppressedValidationErrors.add('dependencies-without-versions')
}
