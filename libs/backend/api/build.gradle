plugins {
  id 'java'
  id 'io.spring.dependency-management' version '1.1.0'
  id 'maven-publish'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(17)
  }
}

repositories {
  mavenLocal()
  mavenCentral()
}

dependencyManagement {
  imports {
    mavenBom 'org.springframework.boot:spring-boot-dependencies:3.4.8'
  }
}

dependencies {
  implementation project(':domain')
  implementation 'jakarta.inject:jakarta.inject-api:2.0.1'
  implementation 'jakarta.ws.rs:jakarta.ws.rs-api:3.1.0'
  implementation 'org.springframework.hateoas:spring-hateoas'
  implementation 'com.fasterxml.jackson.core:jackson-annotations'
  implementation 'com.fasterxml.jackson.core:jackson-databind'
  implementation 'io.projectreactor:reactor-core'
  implementation 'org.glassfish.jersey.media:jersey-media-sse'
  implementation 'org.glassfish.jersey.test-framework.providers:jersey-test-framework-provider-grizzly2'



  testImplementation 'org.springframework.boot:spring-boot-starter-hateoas'
  testImplementation 'org.springframework.boot:spring-boot-starter-jersey'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'io.rest-assured:rest-assured:5.3.0'
  testImplementation 'com.h2database:h2'
}

tasks.named('test') {
  useJUnitPlatform()
}

publishing {
  publications {
    apiMaven(MavenPublication) {
      from components.java

      // Suppress the validation for dependencies without versions
      suppressPomMetadataWarningsFor('runtimeElements')
    }
  }
}

tasks.withType(GenerateModuleMetadata) {
  suppressedValidationErrors.add('dependencies-without-versions')
}
